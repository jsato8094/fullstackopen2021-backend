{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","services/persons.js","components/Persons.js","App.js","index.js"],"names":["Filter","word","handleWordChange","value","onChange","Notification","message","className","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","baseUrl","axios","get","then","res","data","person","post","id","delete","put","Persons","persons","searchWord","setPersons","personsToShow","filter","p","name","toLowerCase","includes","DeleteButton","onClick","window","confirm","personService","handleDeletePerson","map","number","App","useState","setNewName","setNewNumber","setSearchWord","setMessage","useEffect","setMessageDeletionTimer","setTimeout","event","target","preventDefault","personObject","idToBeUpdated","returned","console","log","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4405170.chunk.js","sourcesContent":["const Filter = ({ word, handleWordChange }) => {\n  return (\n    <div>\n        filter shown with <input value={word} onChange={handleWordChange} />\n    </div>\n  )\n}\n\nexport default Filter","const Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"notification\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","const PersonForm = ({ addPerson, newName, handleNameChange, newNumber, handleNumberChange }) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(res => res.data)\n}\n\nconst create = person => {\n  return axios.post(baseUrl, person).then(res => res.data)\n}\n\nconst remove = id => {\n  return axios.delete(`${baseUrl}/${id}`).then(res => res.data)\n}\n\nconst update = (id, person) => {\n  return axios.put(`${baseUrl}/${id}`, person)\n    .then(res => res.data)\n}\n\n// eslint-disable-next-line\nexport default { getAll, create, remove, update }","import personService from '../services/persons'\n\nconst Persons = ({ persons, searchWord, setPersons }) => {\n\n  const personsToShow = searchWord === ''\n    ? persons\n    : persons.filter(p => p.name.toLowerCase().includes(searchWord.toLowerCase()))\n\n  const handleDeletePerson = person => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personService.remove(person.id)\n      setPersons(persons.filter(p => p.id !== person.id))\n    }\n  }\n\n  const DeleteButton = ({ person }) => {\n    return (\n      <button onClick={() => handleDeletePerson(person)}>\n        delete\n      </button>\n    )\n  }\n\n  return (\n    personsToShow.map(p =>\n      <div key={p.id}>\n        {p.name} {p.number} <DeleteButton person={p} />\n      </div>\n    )\n  )\n}\n\nexport default Persons","import React, { useState, useEffect } from 'react'\n\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService  from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchWord, setSearchWord ] = useState('')\n  const [ message, setMessage ]  = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(persons => setPersons(persons) )\n  }, [])\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleWordChange = (event) => setSearchWord(event.target.value)\n\n  const setMessageDeletionTimer = () => setTimeout(() => setMessage(null), 3000)\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (!persons.map(p => p.name).includes(newName)) {\n      personService\n        .create(personObject)\n        .then(returned => {\n          setPersons(persons.concat(returned))\n          setNewName('')\n          setNewNumber('')\n          setMessage(`Added ${returned.name}`)\n          setMessageDeletionTimer()\n        })\n    } else if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n      const idToBeUpdated = persons.filter(p => p.name === newName)[0].id\n      personService\n        .update(idToBeUpdated, personObject)\n        .then(returned => {\n          setPersons(persons.map(p => p.id === returned.id ? returned : p))\n          setNewName('')\n          setNewNumber('')\n          setMessage(`Added ${returned.name}`)\n          setMessageDeletionTimer()\n        })\n    } else {\n      console.log(`${newName} is already added to phonebook, do nothing`)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter word={searchWord} handleWordChange={handleWordChange} />\n      <h3>Add a new</h3>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={persons} searchWord={searchWord} setPersons={setPersons} />\n    </div>\n  )\n}\n\nexport default App  ","import ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}